{"version":3,"sources":["socketContext.js","component/videoPlayer.js","component/notification.js","component/option.js","App.js","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","children","useState","stream","setStream","me","setMe","call","setCall","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivedCall","Provider","value","callUser","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","leaveCall","destroy","window","location","reload","answerCall","to","useStyles","makeStyles","theme","width","breakpoints","down","gridContainer","justifyContent","flexDirection","paper","padding","border","margin","VideoPlayer","useContext","classes","Grid","container","className","Paper","item","xs","md","Typography","variant","gutterBottom","playsInline","muted","ref","autoPlay","Notification","style","display","Button","color","onClick","root","marginTop","Option","idToCall","setIdToCall","Container","elevation","noValidate","autoComplete","TextField","label","onChange","e","target","fullWidth","text","startIcon","Assignment","fontSize","PhoneDisabled","Phone","appBar","borderRadius","alignItems","wrapper","App","AppBar","position","align","ReactDom","render","document","getElementById"],"mappings":"+RAIMA,EAAgBC,0BAEhBC,EAASC,aAAG,+CAEZC,EAAkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,EAA4BC,mBAAS,MAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoBF,mBAAS,IAA7B,mBAAOG,EAAP,KAAWC,EAAX,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAAwCN,oBAAS,GAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAAkCR,oBAAS,GAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KACA,EAAwBV,mBAAS,IAAjC,mBAAOW,EAAP,KAAaC,EAAb,KAEMC,EAAUC,mBACVC,EAAYD,mBACZE,EAAgBF,mBAEtBG,qBAAU,WACRC,UAAUC,aACPC,aAAa,CAAEC,OAAO,EAAMC,OAAO,IACnCC,MAAK,SAACC,GACLtB,EAAUsB,GACVX,EAAQY,QAAQC,UAAYF,KAEhC5B,EAAO+B,GAAG,MAAM,SAACC,GAAD,OAAQxB,EAAMwB,MAE9BhC,EAAO+B,GAAG,YAAY,YAAyC,IAAtCE,EAAqC,EAArCA,KAAYC,EAAyB,EAA/BnB,KAAkBoB,EAAa,EAAbA,OAC/CzB,EAAQ,CAAE0B,gBAAgB,EAAMH,OAAMlB,KAAMmB,EAAYC,gBAEzD,IA+CH,OACE,cAACrC,EAAcuC,SAAf,CACEC,MAAO,CACL7B,OACAE,eACAM,UACAE,YACAd,SACAU,OACAC,UACAH,YACAN,KACAgC,SAxCW,SAACP,GAChB,IAAMQ,EAAO,IAAIC,IAAK,CAAEC,WAAW,EAAMC,SAAS,EAAOtC,WAEzDmC,EAAKT,GAAG,UAAU,SAACa,GACjB5C,EAAO6C,KAAK,WAAY,CACtBC,WAAYd,EACZe,WAAYH,EACZX,KAAM1B,EACNQ,YAIJyB,EAAKT,GAAG,UAAU,SAACH,GACjBT,EAAUU,QAAQC,UAAYF,KAEhC5B,EAAO+B,GAAG,gBAAgB,SAACI,GACzBvB,GAAgB,GAChB4B,EAAKL,OAAOA,MAEdf,EAAcS,QAAUW,GAsBpBQ,UAnBY,WAChBlC,GAAa,GACbM,EAAcS,QAAQoB,UACtBC,OAAOC,SAASC,UAiBZC,WA3Da,WACjBzC,GAAgB,GAChB,IAAM4B,EAAO,IAAIC,IAAK,CAAEC,WAAW,EAAOC,SAAS,EAAOtC,WAE1DmC,EAAKT,GAAG,UAAU,SAACa,GACjB5C,EAAO6C,KAAK,aAAc,CAAEV,OAAQS,EAAMU,GAAI7C,EAAKwB,UAGrDO,EAAKT,GAAG,UAAU,SAACH,GACjBT,EAAUU,QAAQC,UAAYF,KAGhCY,EAAKL,OAAO1B,EAAK0B,QAEjBf,EAAcS,QAAUW,IAgCxB,SAgBGrC,KC1FDoD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvChC,MAAM,aACJiC,MAAO,SACND,EAAME,YAAYC,KAAK,MAAQ,CAC9BF,MAAO,UAGXG,cAAc,aACZC,eAAgB,UACfL,EAAME,YAAYC,KAAK,MAAQ,CAC9BG,cAAe,WAGnBC,MAAO,CACLC,QAAS,OACTC,OAAQ,kBACRC,OAAQ,YAiDGC,EA7CK,WAClB,MACEC,qBAAWvE,GADLiB,EAAR,EAAQA,KAAMJ,EAAd,EAAcA,aAAcM,EAA5B,EAA4BA,QAASE,EAArC,EAAqCA,UAAWN,EAAhD,EAAgDA,UAAWR,EAA3D,EAA2DA,OAAQI,EAAnE,EAAmEA,KAE7D6D,EAAUf,IAEhB,OACE,eAACgB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWH,EAAQT,cAAnC,UAEGxD,GACC,cAACqE,EAAA,EAAD,CAAOD,UAAWH,EAAQN,MAA1B,SACE,eAACO,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAArC,SACGjE,GAAQ,SAEX,uBACEkE,aAAW,EACXC,OAAK,EACLC,IAAKlE,EACLmE,UAAQ,EACRX,UAAWH,EAAQ7C,aAO1Bd,IAAiBE,GAChB,cAAC6D,EAAA,EAAD,CAAOD,UAAWH,EAAQN,MAA1B,SACE,eAACO,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAArC,SACGvE,EAAKM,MAAQ,SAEhB,uBACEkE,aAAW,EACXE,IAAKhE,EACLiE,UAAQ,EACRX,UAAWH,EAAQ7C,iB,SCpClB4D,EArBM,WACnB,MAA2ChB,qBAAWvE,GAA9CuD,EAAR,EAAQA,WAAY5C,EAApB,EAAoBA,KAAME,EAA1B,EAA0BA,aAC1B,OACE,mCACGF,EAAK2B,iBAAmBzB,GACvB,sBAAK2E,MAAO,CAAEC,QAAS,OAAQzB,eAAgB,UAA/C,UACE,+BAAKrD,EAAKM,KAAV,mBACA,cAACyE,EAAA,EAAD,CACET,QAAQ,YACRU,MAAM,UACNC,QAASrC,EACTiC,MAAO,CAAEnB,OAAQ,QAJnB,0B,qDCGJZ,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCkC,KAAM,CACJJ,QAAS,OACTxB,cAAe,UAEjBF,cAAc,aACZH,MAAO,QACND,EAAME,YAAYC,KAAK,MAAQ,CAC9BG,cAAe,WAGnBS,UAAU,aACRd,MAAO,QACPS,OAAQ,SACRF,QAAS,GACRR,EAAME,YAAYC,KAAK,MAAQ,CAC9BF,MAAO,QAGXS,OAAQ,CACNyB,UAAW,IAEb3B,QAAS,CACPA,QAAS,IAEXD,MAAO,CACLC,QAAS,YACTC,OAAQ,uBA4EG2B,EAzEA,SAAC,GAAkB,IAAhB1F,EAAe,EAAfA,SAChB,EACEkE,qBAAWvE,GADLS,EAAR,EAAQA,GAAII,EAAZ,EAAYA,aAAcI,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,QAASH,EAAzC,EAAyCA,UAAWmC,EAApD,EAAoDA,UAAWT,EAA/D,EAA+DA,SAE/D,EAAgCnC,mBAAS,IAAzC,mBAAO0F,EAAP,KAAiBC,EAAjB,KACMzB,EAAUf,IAEhB,OACE,cAACyC,EAAA,EAAD,CAAWvB,UAAWH,EAAQE,UAA9B,SACE,eAACE,EAAA,EAAD,CAAOuB,UAAW,GAAIxB,UAAWH,EAAQN,MAAzC,UACE,sBAAMS,UAAWH,EAAQqB,KAAMO,YAAU,EAACC,aAAa,MAAvD,SACE,eAAC5B,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWH,EAAQT,cAAnC,UACE,eAACU,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGJ,UAAWH,EAAQL,QAA7C,UACE,cAACa,EAAA,EAAD,CAAYE,cAAY,EAACD,QAAQ,KAAjC,0BAGA,cAACqB,EAAA,EAAD,CACEC,MAAM,OACN/D,MAAOvB,EACPuF,SAAU,SAACC,GAAD,OAAOvF,EAAQuF,EAAEC,OAAOlE,QAClCmE,WAAS,IAEX,cAAC,kBAAD,CAAiBC,KAAMnG,EAAIkE,UAAWH,EAAQH,OAA9C,SACE,cAACqB,EAAA,EAAD,CACET,QAAQ,YACRU,MAAM,UACNgB,WAAS,EACTE,UAAW,cAACC,EAAA,EAAD,IACXC,SAAS,eAIf,eAACtC,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGJ,UAAWH,EAAQL,QAA7C,UACE,cAACa,EAAA,EAAD,CAAYE,cAAY,EAACD,QAAQ,KAAjC,yBAGA,cAACqB,EAAA,EAAD,CACEC,MAAM,aACN/D,MAAOwD,EACPQ,SAAU,SAACC,GAAD,OAAOR,EAAYQ,EAAEC,OAAOlE,QACtCmE,WAAS,IAEV9F,IAAiBE,EAChB,cAAC2E,EAAA,EAAD,CACET,QAAQ,YACRU,MAAM,YACNgB,WAAS,EACTE,UAAW,cAACG,EAAA,EAAD,CAAeD,SAAS,UACnCnB,QAAS1C,EACTyB,UAAWH,EAAQH,OANrB,qBAWA,cAACqB,EAAA,EAAD,CACET,QAAQ,YACRU,MAAM,UACNgB,WAAS,EACTE,UAAW,cAACI,EAAA,EAAD,CAAOF,SAAS,UAC3BnB,QAAS,kBAAMnD,EAASuD,IACxBrB,UAAWH,EAAQH,OANrB,0BAcPhE,QCxGHoD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCuD,OAAO,aACLC,aAAc,GACd9C,OAAQ,aACRoB,QAAS,OACTxB,cAAe,MACfD,eAAgB,SAChBoD,WAAY,SACZxD,MAAO,QACPQ,OAAQ,mBAEPT,EAAME,YAAYC,KAAK,MAAQ,CAC9BF,MAAO,QAGXyD,QAAS,CACP5B,QAAS,OACTxB,cAAe,SACfmD,WAAY,SACZxD,MAAO,YAqBI0D,EAjBH,WACV,IAAM9C,EAAUf,IAChB,OACE,sBAAKkB,UAAWH,EAAQ6C,QAAxB,UACE,cAACE,EAAA,EAAD,CAAQ5C,UAAWH,EAAQ0C,OAAQM,SAAS,SAAS7B,MAAM,UAA3D,SACE,cAACX,EAAA,EAAD,CAAYC,QAAQ,KAAKwC,MAAM,SAA/B,0BAIF,cAAC,EAAD,IACA,cAAC,EAAD,UACE,cAAC,EAAD,U,OCnCRC,IAASC,OACP,cAAC,EAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b5e66e59.chunk.js","sourcesContent":["import React, { createContext, useState, useRef, useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\n\r\nconst SocketContext = createContext();\r\n\r\nconst socket = io(\"https://video-chat-socket-io.herokuapp.com/\");\r\n\r\nconst ContextProvider = ({ children }) => {\r\n  const [stream, setStream] = useState(null);\r\n  const [me, setMe] = useState(\"\");\r\n  const [call, setCall] = useState({});\r\n  const [callAccepted, setCallAccepted] = useState(false);\r\n  const [callEnded, setCallEnded] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const myVideo = useRef();\r\n  const userVideo = useRef();\r\n  const connectionRef = useRef();\r\n\r\n  useEffect(() => {\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then((currentStream) => {\r\n        setStream(currentStream);\r\n        myVideo.current.srcObject = currentStream;\r\n      });\r\n    socket.on(\"me\", (id) => setMe(id));\r\n\r\n    socket.on(\"calluser\", ({ from, name: callerName, signal }) => {\r\n      setCall({ isReceivedCall: true, from, name: callerName, signal });\r\n    });\r\n  }, []);\r\n\r\n  const answerCall = () => {\r\n    setCallAccepted(true);\r\n    const peer = new Peer({ initiator: false, trickle: false, stream });\r\n\r\n    peer.on(\"signal\", (data) => {\r\n      socket.emit(\"answercall\", { signal: data, to: call.from });\r\n    });\r\n\r\n    peer.on(\"stream\", (currentStream) => {\r\n      userVideo.current.srcObject = currentStream;\r\n    });\r\n\r\n    peer.signal(call.signal);\r\n\r\n    connectionRef.current = peer;\r\n  };\r\n\r\n  const callUser = (id) => {\r\n    const peer = new Peer({ initiator: true, trickle: false, stream });\r\n\r\n    peer.on(\"signal\", (data) => {\r\n      socket.emit(\"calluser\", {\r\n        userToCall: id,\r\n        signalData: data,\r\n        from: me,\r\n        name,\r\n      });\r\n    });\r\n\r\n    peer.on(\"stream\", (currentStream) => {\r\n      userVideo.current.srcObject = currentStream;\r\n    });\r\n    socket.on(\"callaccepted\", (signal) => {\r\n      setCallAccepted(true);\r\n      peer.signal(signal);\r\n    });\r\n    connectionRef.current = peer;\r\n  };\r\n\r\n  const leaveCall = () => {\r\n    setCallEnded(true);\r\n    connectionRef.current.destroy();\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <SocketContext.Provider\r\n      value={{\r\n        call,\r\n        callAccepted,\r\n        myVideo,\r\n        userVideo,\r\n        stream,\r\n        name,\r\n        setName,\r\n        callEnded,\r\n        me,\r\n        callUser,\r\n        leaveCall,\r\n        answerCall,\r\n      }}\r\n    >\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n\r\nexport { ContextProvider, SocketContext };\r\n","import React, { useContext } from \"react\";\r\nimport { Grid, Typography, Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nimport { SocketContext } from \"../socketContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  video: {\r\n    width: \"550px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"300px\",\r\n    },\r\n  },\r\n  gridContainer: {\r\n    justifyContent: \"center\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  paper: {\r\n    padding: \"10px\",\r\n    border: \"2px solid black\",\r\n    margin: \"10px\",\r\n  },\r\n}));\r\n\r\nconst VideoPlayer = () => {\r\n  const { name, callAccepted, myVideo, userVideo, callEnded, stream, call } =\r\n    useContext(SocketContext);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container className={classes.gridContainer}>\r\n      {/* our own video */}\r\n      {stream && (\r\n        <Paper className={classes.paper}>\r\n          <Grid item xs={12} md={6}>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              {name || \"Name\"}\r\n            </Typography>\r\n            <video\r\n              playsInline\r\n              muted\r\n              ref={myVideo}\r\n              autoPlay\r\n              className={classes.video}\r\n            />\r\n          </Grid>\r\n        </Paper>\r\n      )}\r\n\r\n      {/* User's video */}\r\n      {callAccepted && !callEnded && (\r\n        <Paper className={classes.paper}>\r\n          <Grid item xs={12} md={6}>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              {call.name || \"Name\"}\r\n            </Typography>\r\n            <video\r\n              playsInline\r\n              ref={userVideo}\r\n              autoPlay\r\n              className={classes.video}\r\n            />\r\n          </Grid>\r\n        </Paper>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;\r\n","import React, { useContext } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport { SocketContext } from \"../socketContext\";\r\n\r\nconst Notification = () => {\r\n  const { answerCall, call, callAccepted } = useContext(SocketContext);\r\n  return (\r\n    <>\r\n      {call.isReceivedCall && !callAccepted && (\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <h2>{call.name} is calling: </h2>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={answerCall}\r\n            style={{ margin: \"20px\" }}\r\n          >\r\n            Answer\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useContext, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport { Assignment, Phone, PhoneDisabled } from \"@material-ui/icons\";\r\nimport { SocketContext } from \"../socketContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  gridContainer: {\r\n    width: \"100%\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  container: {\r\n    width: \"600px\",\r\n    margin: \"35px 0\",\r\n    padding: 0,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"80%\",\r\n    },\r\n  },\r\n  margin: {\r\n    marginTop: 20,\r\n  },\r\n  padding: {\r\n    padding: 20,\r\n  },\r\n  paper: {\r\n    padding: \"10px 20px\",\r\n    border: \"2px solid black\",\r\n  },\r\n}));\r\nconst Option = ({ children }) => {\r\n  const { me, callAccepted, name, setName, callEnded, leaveCall, callUser } =\r\n    useContext(SocketContext);\r\n  const [idToCall, setIdToCall] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container className={classes.container}>\r\n      <Paper elevation={10} className={classes.paper}>\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n          <Grid container className={classes.gridContainer}>\r\n            <Grid item xs={12} md={6} className={classes.padding}>\r\n              <Typography gutterBottom variant=\"h6\">\r\n                Account Info\r\n              </Typography>\r\n              <TextField\r\n                label=\"Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                fullWidth\r\n              />\r\n              <CopyToClipboard text={me} className={classes.margin}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  startIcon={<Assignment />}\r\n                  fontSize=\"large\"\r\n                ></Button>\r\n              </CopyToClipboard>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} className={classes.padding}>\r\n              <Typography gutterBottom variant=\"h6\">\r\n                Make a call\r\n              </Typography>\r\n              <TextField\r\n                label=\"Id to Call\"\r\n                value={idToCall}\r\n                onChange={(e) => setIdToCall(e.target.value)}\r\n                fullWidth\r\n              />\r\n              {callAccepted && !callEnded ? (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  fullWidth\r\n                  startIcon={<PhoneDisabled fontSize=\"large\" />}\r\n                  onClick={leaveCall}\r\n                  className={classes.margin}\r\n                >\r\n                  Hang Up\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  startIcon={<Phone fontSize=\"large\" />}\r\n                  onClick={() => callUser(idToCall)}\r\n                  className={classes.margin}\r\n                >\r\n                  Call\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        {children}\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Option;\r\n","import React from \"react\";\r\nimport { Typography, AppBar } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport VideoPlayer from \"./component/videoPlayer\";\r\nimport Notification from \"./component/notification\";\r\nimport Option from \"./component/option\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    borderRadius: 15,\r\n    margin: \"30px 100px\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"600px\",\r\n    border: \"2px solid black\",\r\n\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"90%\",\r\n    },\r\n  },\r\n  wrapper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n        <Typography variant=\"h2\" align=\"center\">\r\n          Video Chat\r\n        </Typography>\r\n      </AppBar>\r\n      <VideoPlayer />\r\n      <Option>\r\n        <Notification />\r\n      </Option>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\nimport { ContextProvider } from \"./socketContext\";\r\nimport \"./style.css\";\r\n\r\nReactDom.render(\r\n  <ContextProvider>\r\n    <App />\r\n  </ContextProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}